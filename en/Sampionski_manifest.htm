<!doctype HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><!-- #BeginTemplate "/Templates/Standard.dwt" -->
	
<!-- Mirrored from www.sampioni.com/en/Sampionski_manifest.htm by HTTrack Website Copier/3.x [XR&CO'2002], Mon, 07 Jul 2003 20:59:25 GMT -->
<head>
<!-- #BeginEditable "doctitle" -->
<title>Champion&#39;s manifest</title>
<!-- #EndEditable -->
<meta content="Microsoft FrontPage 5.0" name="GENERATOR">
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	    <link rel="stylesheet" type="text/css" href="../css/sampioni.css">
	</head>
	<body >
		
<TABLE id="Table1" height="50" cellSpacing="0" cellPadding="0" width="100%" border="0">
  <TR> 
    <TD width="2%" class="header">&nbsp;</TD>
    <TD class="header"> <a href="Zasto_sampioni.htm"> 
    <img border="0" src="images/logo.gif" width="150" height="75"></a></TD>
    <TD width="50%" class="header" valign="bottom" align="right"> 
      <!--webbot bot="Include" U-Include="citat.htm" TAG="BODY" startspan -->
<p class="citat">All companies are dominated by stupidity. What makes the 
difference is the amount of compensation you get for staying there. <br>
&nbsp;</p>
<!--webbot bot="Include" i-checksum="13788" endspan -->
    </TD>

  </TR>
  <TR> 
    <TD width="2%" class="subheader">&nbsp;</TD>
    <TD class="subheader" height="20" colspan="2">
    <!--webbot bot="Include" U-Include="subheader.htm" TAG="BODY" startspan -->

Site about &quot;championism&quot; and &quot;champ&quot; firms on Croatian IT market.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
-&gt;<a href="../hr/Default.html">Croatian site</a><!--webbot bot="Include" i-checksum="65217" endspan -->&nbsp;
    </TD>
  </TR>
</TABLE>
		<TABLE id="Table5" cellSpacing="0" cellPadding="1" width="100%" border="0">
			<TR>
				<TD height="30">&nbsp;</TD>
			</TR>
		</TABLE>
		<TABLE id="Table2" cellSpacing="0" cellPadding="1" width="100%" border="0">
			<tr>
				<td>
					<TABLE id="Table3" cellSpacing="0" cellPadding="0" width="20%" align="left" border="0">
						<TR>
							<TD width="2%"></TD>
							<TD width="10%"></TD>
							
          <TD class="navigation"> 
            <!--webbot bot="Navigation" S-Orientation="vertical" S-Rendering="html" S-Type="siblings" B-Include-Home="FALSE" B-Include-Up="FALSE" S-Btn-Nml="&lt;A HREF=&quot;#URL#&quot; TARGET=&quot;#TARGET#&quot; STYLE=&quot;{text-decoration: none;}&quot;&gt;#LABEL#&lt;/A&gt;" S-Btn-Sel="#LABEL#" S-Btn-Sep="&lt;br&gt;" S-Bar="Bars" startspan  --><nobr><A HREF="Zasto_sampioni.htm" TARGET="" STYLE="{text-decoration: none;}">What&nbsp;is&nbsp;championism?</A></nobr><br><nobr><A HREF="news/novosti.html" TARGET="" STYLE="{text-decoration: none;}">Site&nbsp;news</A></nobr><br><nobr>Champion&#39;s&nbsp;manifest</nobr><br><nobr><A HREF="Legenda.htm" TARGET="" STYLE="{text-decoration: none;}">The&nbsp;Legend&nbsp;of&nbsp;champions</A></nobr><br><nobr><A HREF="poll/pitanje.html" TARGET="" STYLE="{text-decoration: none;}">Weekly&nbsp;poll</A></nobr><!--webbot bot="Navigation" i-checksum="29835" endspan -->
          </TD>
						</TR>
					</TABLE>
					
      <TABLE id="Table4" cellSpacing="0" cellPadding="1" width="*%" border="0">
        <TR>
							<TD class="separator" width="3%">&nbsp;</TD>
							
          <TD class="ContentTitle"><!-- #BeginEditable "ContentTitle" -->
          Champions&#39; manifest</TD>
						</TR>
						<tr>
							<td colSpan="2" height="10" class="separator">&nbsp;</td>
						</tr>
						<TR>
							<TD class="separator" width="3%">&nbsp;</TD>
							
          <TD class="Content"><!-- #BeginEditable "Content" -->
		  <p class="ContentSubTitle"><span lang="en-gb">Champion&#39;s slogan</span></p>
        <ol>
          <li><span lang="en-gb">The main slogan of champ firm is: &quot;We are champions of the 
          world&quot;.</span></li>
        </ol>
        <p class="ContentSubTitle"><span lang="en-gb">Champion&#39;s knowledge</span></p>
        <ol>
          <li value="2"><span lang="en-gb">Champion never says: &quot;I don&#39;t know&quot;. He knows 
          everything. He doesn&#39;t need learning, education or self-improvement. 
          If he admits that there is something he doesn&#39;t know, he would be soon 
          defeated by another champion who doesn&#39;t make such mistake. Saying &quot;I 
          don&#39;t know&quot; is sign of weakness, insecurity and lack of self-esteem.
          </span> </li>
          <li><span lang="en-gb">If there is something he doesn&#39;t know, he would secretly learn 
          basic facts about the subject and then pretend in front of the other 
          people that he was an expert in that field for years. </span> </li>
          <li><span lang="en-gb">Real champion can mess with any technology, 
          preferably one that 
          is the most popular and the most profitable at the moment.&nbsp; 
          Yesterday VB, today ASP, tomorrow .NET - there is nothing he cannot 
          learn quickly and then use to promote himself.&nbsp; </span> </li>
          <li><span lang="en-gb">This &quot;everybody can do anything&quot; principle is the 
          first thing 
          that distinguishes champ firm from the others. If, for example, you 
          run into an organization with the following characteristics:</span></li>
        </ol>
        <blockquote>
          <ul>
            <li>
            <p class="bulleted"><span lang="en-gb">It has 6 employees and each one of them manages 
            at least one project</span></li>
            <li>
            <p class="bulleted"><span lang="en-gb">Most of the projects are solo projects or they 
            involve one permanent employee + subcontractors</span></li>
            <li>
            <p class="bulleted"><span lang="en-gb">People not involved in particular project have 
            no idea what the project is all about</span></li>
            <li>
            <p class="bulleted"><span lang="en-gb">&quot;Everybody can do anything&quot; 
            principle can be easily spotted. If some project requires another 
            human resource, the first available person is assigned to the project, 
            without considering his knowledge of technologies needed in project. 
            Motto that drives the decision is &quot;He is available, so he will do 
            the work&quot;. </span> </li>
            <li>
            <p class="bulleted"><span lang="en-gb">There is no coding standard, development process 
            or documentation shared between even two employees, not to mention 
            the whole firm. Every person works in a way that best suits him and 
            without thinking of others.</span></li>
          </ul>
          <p><span lang="en-gb">you can be sure that you are in champ firm.</span></p>
        </blockquote>
        <p class="ContentSubTitle"><span lang="en-gb">Champion&#39;s honesty</span></p>
        <ol>
          <li value="6"><span lang="en-gb">Words like &quot;humility&quot; or &quot;honesty&quot; don&#39;t exist in 
          champion&#39;s vocabulary. He must use every opportunity to prove to 
          other people that he is the best, whether they want to hear it or not. 
          &quot;I&#39;ve been messing with HTML since 1990&quot;, &quot;I am one of the top 10 VB 
          developers on Brainbench&quot;, &quot;This solution is my baby and I designed 
          it, and now some other people take credit for it. OK, I didn&#39;t write a 
          single line of code but that was still my idea.&quot;</span></li>
          <li><span lang="en-gb">Good champion&#39;s technique is to accuse others of his own bad 
          habits. If champion says for somebody &quot;He has great ego&quot;, then be 
          assured that the ego of that champion is twice as big as the ego of 
          the person he speaks about. Or, if he says &quot;I despise weasels who work 
          behind people&#39;s back&quot; then again be assured that he has just described 
          you his prime technique of survival in corporate world.</span></li>
        </ol>
        <p class="ContentSubTitle"><span lang="en-gb">Champion&#39;s profile</span></p>
        <ol>
          <li><span lang="en-gb">Here we give you the profile of the real world-class champion:</span></li>
        </ol>
        <ul>
          <li><span lang="en-gb">He &quot;knows&quot; all the technologies. Windows administration, AD, 
          Exchange, SQL server, database design, XML, XSLT, VB, ASP, .NET, HTML, 
          Perl, JavaScript - do you need more?</span></li>
          <li><span lang="en-gb">Off course, he is not expert in any of these technologies. He has 
          only learned enough phrases or buzzwords to assure 
          other people that he is an expert in the field. When you realize that 
          he is a fake, it is too late because he is already on your project or 
          even worse, he manages it.</span></li>
          <li><span lang="en-gb">Real champion usually does several activities in parallel but 
          sloppily and inefficiently. He has trouble concentrating on one task 
          and doing it properly, because he soon gets bored or realizes there is 
          too much work to be done. He is the king of unfinished activities. The 
          real trouble is that he doesn&#39;t see himself that way, instead he 
          thinks of himself as of great organizer who can solve many problems at 
          once and is superior to losers who concentrate on only one thing.</span></li>
          <li><span lang="en-gb">He has never heard of any programming theory or took any 
          programming class. Everything he knows he learned by try-and-error 
          method and his experience. Logic, mathematics, Boolean algebra and 
          similar words are obsolete in his eyes - who really needs that ancient 
          stuff?</span></li>
          <li><span lang="en-gb">He avoids object-oriented design and related languages (Java, C++) 
          because these concepts are too hard for him to comprehend. He will 
          even tell you that he hates classes. Quote: &quot;I hate classes because 
          they are inefficient and too complex. That&#39;s why I only use 
          structures&quot; or &quot;Why are you using classes when the same functionality 
          can be achieved by few if clauses?&quot;. You can expect even worse 
          response if you try to talk about more sophisticated concepts, like 
          for example, Design patterns.&nbsp; </span> </li>
          <li><span lang="en-gb">If he is a Windows programmer, his definite language of choice is 
          Visual Basic or VBScript </span> </li>
          <li><span lang="en-gb">His favourite application architecture is monolithic single-tier 
          architecture where he puts hundreds  lines of hard-readable, 
          spaghetti code directly into form&#39;s event handlers, making of them a 
          horrifying mix of hard-coded multiline SQL statements, business rules 
          and user-interface actions. He hates three-tier and similar 
          architectures because they force him to think and plan. His favourite 
          phrase is &quot;I do not 
          plan, I code&quot;. Or &quot;We gave up COM components because that damned 
          binary compatibility caused us nothing but the trouble. We 
          solved the problem by putting all the code in single exe file (7,5 MB 
          at the time).&quot; Off course, when listening to that statement you should 
          read between the lines and translate into &quot;I didn&#39;t have a clue what 
          is the difference between compatibilities in VB and I didn&#39;t have time 
          to read MSDN or to ask somebody. So I did only thing I knew.&quot;</span></li>
          <li><span lang="en-gb">He types and clicks very fast so nobody standing 
          near him can understand 
          what is he doing. </span> </li>
          <li><span lang="en-gb">He evaluates other developers strictly by how fast they can 
          produce workable code, no matter how good and maintainable that code 
          is. He would often say: &quot;Oh, Rob is a good guy, but man, he is sooo 
          SLOOW!&quot;</span></li>
          <li><span lang="en-gb">To achieve that speed of coding, he uses nothing but legendary 
          Copy-Paste method and creates new code by copying the old one. He 
          doesn&#39;t hesitate to copy the same fragments over and over again, 
          without pausing for even a second and thinking about better solution. 
          On some rare occasions he creates functions or subs, but that doesn&#39;t 
          happen so often because it is faster just to copy the code instead of 
          thinking about the function design, parameters etc. If somebody later 
          complains that the code is hard to maintain, it isn&#39;t the champ&#39;s 
          concern. He doesn&#39;t have time to think what will happen to his code 
          after he writes it or even to care about the losers who will maintain 
          it. It&#39;s their problem they are stupid and they can&#39;t easily 
          comprehend his masterpiece. </span> </li>
          <li><span lang="en-gb">Real champion also never comments his code. If he is forced to 
          write those bloody green lines, he seeks for the first excuse to quit 
          that unnecessary activity, usually with the explanation that he is too 
          busy at the moment and he would do it later. Off course, later in his 
          vocabulary means never.</span></li>
          <li><span lang="en-gb">Documentation? It is for pussies, not for real 
          programmers. Only pathetic losers need documentation to understand 
          champion&#39;s code. Isn&#39;t it just enough to open source code? Comments? 
          Who needs comments when the champion&#39;s code is so clear and 
          self-explanatory?.</span></li>
          <li><span lang="en-gb">Another good reason not to write documentation is that 
          documentation can enable some other person to understand the problem 
          and possibly replace the champion. Oh, no! That mustn&#39;t happen! 
          Everything should be just in champ&#39;s memory, so his firm would never 
          come to heretic idea that he is maybe dispensable and that they can 
          live without him.</span></li>
        </ul>
        <p class="ContentSubTitle"><span lang="en-gb">Non-champions</span></p>
        <ol>
          <li><span lang="en-gb">People who want to improve in their profession and emphasize 
          quality in their work are idiots. You only need to learn as much as 
          needed to convince other people  you are the expert and the best 
          for the job. If there is something too complex for you to comprehend, 
          than you only have to know how to delegate it to idiot who wants to 
          work hard. In most cases poor thing would be even grateful for 
          allowing him to do your job. </span> </li>
        </ol>
        <p class="ContentSubTitle"><span lang="en-gb">Champions and education</span></p>
        <ol>
          <li><span lang="en-gb">Champion&#39;s opinion about the courses and books can be summarized 
          in sentences like &quot;Yes, I&#39;ve been to that course but the speaker was 
          pathetic. I had to correct him so often that everybody thought that I 
          should have taken his place&quot;. Or, &quot;Off course I&#39;ve read this book, but 
          there is nothing in it I didn&#39;t know before&quot;.<br>
          If some non-champion says &quot;Let&#39;s apply in practice what we learned 
          during the course&quot;, champion would reply: &quot;Well, it can be useful, but 
          we don&#39;t have time for that right now&quot; or &quot;You do it, you have my full 
          moral support. I have more important things to do.&quot; Courses and books are not 
          very high on champion&#39;s scale of values because they don&#39;t help in 
          building his ego or promote him, they just enhance knowledge and 
          quality in the organization, two characteristics so irrelevant to 
          every real champion.</span></li>
          <li><span lang="en-gb">Champion will always use the opportunity to reinvent the wheel, 
          although everyone knows it is cheaper to use established practices or methodologies. 
          Example: Young, enthusiastic developer comes to a champ firm and 
          seeing the chaos in programming and management, he proposes that the 
          firm embraces some well-known concept or methodology e.g. MSF. His 
          champ co-worker replies: &quot;Why should we apply other people&#39;s processes 
          or practices? Let&#39;s invent our own process!&quot;</span></li>
        </ol>
        <p class="ContentSubTitle"><span lang="en-gb">Champ project management</span></p>
        <ol>
          <li><span lang="en-gb">Real champ starts the project, makes the big noise about it, 
          presents himself as the project lead and the most responsible person 
          but when it comes to real work he suddenly disappears or becomes 
          invisible. For him the purpose of the project is to get new contacts 
          and references, not to make a product and deliver it to customer. When 
          champ achieves his goal, he leaves the project and goes to seek 
          another opportunity to promote himself. The remaining dirty work is 
          done by non-champions who either succeed in finishing the project or 
          the project gets cancelled. Off course, if latter happens, it is 
          exclusively their fault, not of the champion who is already on 
          his way to screw other projects. </span> </li>
          <li><span lang="en-gb">The estimation and scheduling are the disciplines that 
          are probably the most polluted by championism. Let&#39;s quote some champ 
          phrases in this field: &quot;It can be done in three lines of code!&quot;, 
          &quot;C&#39;mon, it takes only three hours of programming!&quot;, &quot;I know that you 
          need 5 days but I would make it in one afternoon&quot;, &quot;It&#39;s peanuts!&quot;, &quot;I 
          have a feeling that we will deliver it on time&quot; etc. If non-champion 
          does the job  but it took three times more than 
          estimation given by champ, he would get typical champion&#39;s response: 
          &quot;You still have much to learn if you wish to finish tasks by 
          schedule&quot;. Indirectly, behind non-champ&#39;s back: &quot;He is slow and 
          doesn&#39;t know much, that&#39;s why it took him so long to develop that 
          code.&quot;</span></li>
          <li><span lang="en-gb">Resource allocation in champ firm follows the simple principle 
          established by <a href="Legenda/erich.htm">father</a> of the statement 
          &quot;We are all champions of the world.&quot; The principle says: &quot;If you give 
          me more Chinese, I will finish the Great Wall sooner.&quot; So called 
          project management experts, like F. Brooks, who claim that putting 10 
          people on 10 man-months project doesn&#39;t mean it would be finished in 
          one month, are off course wrong. If project is late, 
          engage more people, possibly at the end of the project, and you will 
          sure make it. If that doesn&#39;t happen, blame the developers because 
          they are lazy and incompetent. If some of them wasted time in writing 
          documentation, expose them as the most responsible persons for project 
          failure. </span> </li>
          <li><span lang="en-gb">The word that turns on every champion is heroic 
          programming. On the other hand, planning, resource allocation, project 
          tracking and (god forbid) quality assurance are words more profane to 
          champion&#39;s ears than incest or necrophilia.</span></li>
          <li>Real champ never does planning. His main motto is &quot;I&#39;m sure we&#39;ll make 
          it&quot;. Maybe there is a skeptic non-champion in the team who tries to do 
          some math and says for example&nbsp; &quot;We have 20 days until deadline 
          and 3 available developers. Even if we ignore Brooks Law it is 
          impossible to finish everything in that time&quot;. When champ hears that, 
          he knows he can&#39;t find the real argument against it, so he simply 
          accuses non-champion that he is a pessimist, that he has attitude problem 
          and that he doesn&#39;t believe in his or his teammates&#39; abilities.</li>
          <li>Few days before deadline, champ usually realizes to his horror 
          that the skeptic was right. Then he uses good old weapons from 
          champion&#39;s arsenal: rising tension in team and making everybody 
          nervous, political motivation (&quot;OK, we are in trouble but we can still 
          do it, I believe in us..&quot;), mobilization of all possible resources, 
          overtime, working on weekends, heroic, speedy programming without 
          reviews, quality assurance and testing etc.</li>
          <li>Delivery day in champ firm usually looks like this: half an hour 
          before deadline champions are still coding, parts of a program that 
          seem finished are superficially tested and if application doesn&#39;t 
          crash too much, they are considered ready for shipment. Integration of 
          various modules produced by different developers starts at that time and 
          naturally integration problems start to pop up. Parts of code that 
          worked mysteriously disappear, old buggy code suddenly appears where 
          nobody expected it, program manager suddenly realizes that some 
          developers didn&#39;t work to his ideas and made subsystems incompatible 
          with the whole solution. Off course, there was no written 
          specification, not to mention code reviews or project progress 
          tracking. Everybody is nervous, first signs of panic emerge, people 
          are shouting and accuse each other because program doesn&#39;t work 
          and time slips away.&nbsp;&nbsp; </li>
          <li>If by some miracle they manage to put things together and 
          application looks like it can ship, the whole atmosphere radically 
          changes. Champions begin to congratulate to each other, call for a 
          drink, panic turns into euphoria, everybody is unnaturally confident 
          and proud, as everything was great from the beginning and panic and 
          accusations never happened. Off course, it lasts only until the  customer begins to test or use the product. After huge bug list 
          arrives, the process of accusations and responsibility delegation 
          starts all over again. Needless to say, the blame for bad product goes 
          primarily to non-champions and skeptics whose &quot;bad attitude and lack 
          of trust in team slowed us down, provoked team tensions and almost 
          jeopardized our good reputation.&quot;</li>
        </ol>
        <p class="ContentSubTitle"><span lang="en-gb">Champions and 
        documentation</span></p>
        <ol>
          <li>Real champion never writes documentation. He leaves that to 
          pussies and bookworms who prefer to write documents and plans instead 
          of instant committing to extreme, heroic, champion&#39;s programming. </li>
          <li>His spelling and grammar are at the third grade level, because he 
          is so busy programming and promoting himself that he doesn&#39;t have time 
          to check what he wrote. It is so irrelevant to him that he doesn&#39;t 
          care if he mispelles his own name.&nbsp; </li>
          <li>Champion is also weak in speaking foreign languages. He only cares 
          for Visual Basic and VBScript and he leaves other languages, such as 
          English, to non-champion rats. If somebody has trouble realizing that 
          instead of &quot;throw&quot; champion really meant to write &quot;through&quot;, it is his 
          problem. If you don&#39;t know how to decode champ documentation, then you 
          are probably not worthy to be part of the great champion&#39;s team. </li>
          <li>If champion is by any chance forced to write documentation, mostly 
          due to client&#39;s request, the result of his effort is usually something 
          totally useless. When writing documentation, champions tend to prove 
          Marx&#39;s theory of turning quantity into quality. They produce tons of 
          documents that nobody else reads, not to mention use them as a 
          specification for further work. The 
          only purpose of those documents is to satisfy client needs.<br>
          Although the champ&#39;s documentation is total waste for other members of 
          the team, for him it is a good weapon in possible conflicts. If, for 
          instance, later in the project some team member asks champion &quot;Where 
          is the specification for that?&quot;, he would calmly reply, with ironic 
          smile on his face: &quot;It is in the documentation I wrote. Don&#39;t you read 
          the documentation?&quot;.</li>
        </ol>
        
        <!-- #EndEditable --></p>
                            </TD>
						</TR>
						<tr>
							<td colSpan="2" height="10">&nbsp;</td>
						</tr>
						<tr>
							
          <td class="footertopborder" colSpan="2" height="1">
          <IMG src="../images/1.gif" width="1" height="1"></td>
						</tr>
						<TR>
							
          <TD colSpan="2" class="footer">
            <!--webbot bot="Include" U-Include="footer.htm" TAG="BODY" startspan -->

Sampioni.com doesn&#39;t feel responsible for hurt feelings of described champions.<br>
All comments about the site should be sent to: <a href="mailto:administrator@sampioni.com">
administrator@sampioni.com</a><!--webbot bot="Include" i-checksum="27666" endspan -->
          </TD>
						</TR>
					</TABLE>
				</td>
			</tr>
		</TABLE>
	</body>
<!-- #EndTemplate -->
<!-- Mirrored from www.sampioni.com/en/Sampionski_manifest.htm by HTTrack Website Copier/3.x [XR&CO'2002], Mon, 07 Jul 2003 20:59:25 GMT -->
</html>